import type { ThemeColors } from '~/composables/useTheme'

export function serializeYaziTheme(theme: ThemeColors): string {
  const lines = [
    `# Yazi file manager theme`,
    `# Generated with theme-lab`,
    `# Place this at ~/.config/yazi/theme.toml`,
    ``,
    `[manager]`,
    `cwd = { fg = "${theme.base}" }`,
    ``,
    `# Hovered`,
    `hovered         = { fg = "${theme.bg}", bg = "${theme.base}" }`,
    `preview_hovered = { underline = true }`,
    ``,
    `# Find`,
    `find_keyword  = { fg = "${theme.warning}", italic = true }`,
    `find_position = { fg = "${theme.number}", bg = "reset", italic = true }`,
    ``,
    `# Marker`,
    `marker_selected = { fg = "${theme.string}", bg = "${theme.string}" }`,
    `marker_copied   = { fg = "${theme.warning}", bg = "${theme.warning}" }`,
    `marker_cut      = { fg = "${theme.error}", bg = "${theme.error}" }`,
    ``,
    `# Tab`,
    `tab_active   = { fg = "${theme.bg}", bg = "${theme.base}" }`,
    `tab_inactive = { fg = "${theme.comment}", bg = "${theme.palette[0]}" }`,
    `tab_width    = 1`,
    ``,
    `# Border`,
    `border_symbol = "â”‚"`,
    `border_style  = { fg = "${theme.palette[0]}" }`,
    ``,
    `# Highlighting`,
    `syntect_theme = ""`,
    ``,
    `[status]`,
    `separator_open  = ""`,
    `separator_close = ""`,
    `separator_style = { fg = "${theme.palette[0]}", bg = "${theme.palette[0]}" }`,
    ``,
    `# Mode`,
    `mode_normal = { fg = "${theme.bg}", bg = "${theme.base}", bold = true }`,
    `mode_select = { fg = "${theme.bg}", bg = "${theme.string}", bold = true }`,
    `mode_unset  = { fg = "${theme.bg}", bg = "${theme.error}", bold = true }`,
    ``,
    `# Progress`,
    `progress_label  = { fg = "${theme.fg}", bold = true }`,
    `progress_normal = { fg = "${theme.base}", bg = "${theme.palette[0]}" }`,
    `progress_error  = { fg = "${theme.error}", bg = "${theme.palette[0]}" }`,
    ``,
    `# Permissions`,
    `permissions_t = { fg = "${theme.string}" }`,
    `permissions_r = { fg = "${theme.warning}" }`,
    `permissions_w = { fg = "${theme.error}" }`,
    `permissions_x = { fg = "${theme.number}" }`,
    `permissions_s = { fg = "${theme.comment}" }`,
    ``,
    `[input]`,
    `border   = { fg = "${theme.base}" }`,
    `title    = {}`,
    `value    = {}`,
    `selected = { reversed = true }`,
    ``,
    `[select]`,
    `border   = { fg = "${theme.base}" }`,
    `active   = { fg = "${theme.base}" }`,
    `inactive = {}`,
    ``,
    `[tasks]`,
    `border  = { fg = "${theme.base}" }`,
    `title   = {}`,
    `hovered = { underline = true }`,
    ``,
    `[which]`,
    `mask            = { bg = "${theme.palette[0]}" }`,
    `cand            = { fg = "${theme.base}" }`,
    `rest            = { fg = "${theme.comment}" }`,
    `desc            = { fg = "${theme.fg}" }`,
    `separator       = "  "`,
    `separator_style = { fg = "${theme.comment}" }`,
    ``,
    `[help]`,
    `on      = { fg = "${theme.string}" }`,
    `exec    = { fg = "${theme.number}" }`,
    `desc    = { fg = "${theme.comment}" }`,
    `hovered = { bg = "${theme.palette[0]}", bold = true }`,
    `footer  = { fg = "${theme.comment}", bg = "${theme.palette[0]}" }`,
    ``,
    `[filetype]`,
    ``,
    `rules = [`,
    `\t# Images`,
    `\t{ mime = "image/*", fg = "${theme.number}" },`,
    ``,
    `\t# Videos`,
    `\t{ mime = "video/*", fg = "${theme.warning}" },`,
    `\t{ mime = "audio/*", fg = "${theme.warning}" },`,
    ``,
    `\t# Archives`,
    `\t{ mime = "application/zip",             fg = "${theme.error}" },`,
    `\t{ mime = "application/gzip",            fg = "${theme.error}" },`,
    `\t{ mime = "application/x-tar",           fg = "${theme.error}" },`,
    `\t{ mime = "application/x-bzip",          fg = "${theme.error}" },`,
    `\t{ mime = "application/x-bzip2",         fg = "${theme.error}" },`,
    `\t{ mime = "application/x-7z-compressed", fg = "${theme.error}" },`,
    `\t{ mime = "application/x-rar",           fg = "${theme.error}" },`,
    ``,
    `\t# Documents`,
    `\t{ mime = "application/pdf", fg = "${theme.base}" },`,
    ``,
    `\t# Fallback`,
    `\t{ name = "*", fg = "${theme.fg}" },`,
    `\t{ name = "*/", fg = "${theme.base}" }`,
    `]`,
  ]

  return lines.join('\n') + '\n'
}
